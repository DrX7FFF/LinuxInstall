services:
  pihole:
    container_name: pihole
    image: cbcrowe/pihole-unbound:latest
    hostname: ${HOSTNAME}
    domainname: ${DOMAIN_NAME}
    ports:
      # - 443:443/tcp
      - 53:53/tcp
      - 53:53/udp
      - ${PIHOLE_WEBPORT:-80}:80/tcp #Allows use of different port to access pihole web interface when other docker containers use port 80
      # - 5335:5335/tcp # Uncomment to enable unbound access on local server
      # - 22/tcp # Uncomment to enable SSH
    environment:
      - FTLCONF_LOCAL_IPV4=${FTLCONF_LOCAL_IPV4}
      - TZ=${TZ:-UTC}
      - WEBPASSWORD=${WEBPASSWORD}
      - WEBTHEME=${WEBTHEME:-default-light}
      - REV_SERVER=${REV_SERVER:-false}
      - REV_SERVER_TARGET=${REV_SERVER_TARGET}
      - REV_SERVER_DOMAIN=${REV_SERVER_DOMAIN}
      - REV_SERVER_CIDR=${REV_SERVER_CIDR}
      - PIHOLE_DNS_=127.0.0.1#5335
      - DNSSEC="true"
      - DNSMASQ_LISTENING=single
    volumes:
      - ~/docker/pihole_unbound/pihole:/etc/pihole:rw
      - ~/docker/pihole_unbound/dnsmasq.d:/etc/dnsmasq.d:rw
    restart: unless-stopped

  # Docker Tag 2024.07.0 Pi-hole v5.18.3 FTL v5.25.2 Web Interface v5.21
  # unbound:
  #   # image: mvance/unbound:latest # Not compatible with ARM64
  #   image: amine2733/unbound:latest
  #   container_name: unbound
  #   restart: unless-stopped
  #   hostname: unbound
  #   # expose:
  #   #   - "5353"
  #   # networks:
  #   #   - dns
  #   ports:
  #     - 5353:53/tcp
  #     - 5353:53/udp
  #   environment:
  #     - TZ=Europe/Paris
  #   volumes:
  #     - ~/docker/unbound:/opt/unbound/etc/unbound/
  #     # - "~/docker/unbound/forward-records.conf:/opt/unbound/etc/unbound/forward-records.conf"
  #     # - "~/docker/unbound/a-records.conf:/opt/unbound/etc/unbound/a-records.conf"
  #   cap_add:
  #     - NET_ADMIN
  # #   networks:
  # #     private_network:
  # #       ipv4_address: 10.2.0.200

  # pihole:
  #   image: pihole/pihole:latest
  #   container_name: pihole
  #   restart: unless-stopped
  #   hostname: pihole
  #   depends_on: 
  #     - unbound
  #   ports:
  #     - "53:53/tcp"
  #     - "53:53/udp"
  #     # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
  #     # - "80:80/tcp" # 80 utilisé par nodered
  #     - "8081:80/tcp"
  #     # - "443:443/tcp" # Non spécifié par https://github.com/pi-hole/docker-pi-hole
  #   # Volumes store your data between container upgrades
  #   volumes:
  #     - ~/docker/pihole/pihole:/etc/pihole
  #     - ~/docker/pihole/dnsmasq.d:/etc/dnsmasq.d
  #   #  - ~/docker/pihole/pihole.log:/var/log/pihole.log
  #   # dns:
  #   #   - 10.2.0.200 # Points to unbound
  #   #   - 10.2.0.201 #:8053 # Points to stubby
  #   environment:
  #     - TZ=Europe/Paris
  #     - WEBPASSWORD=PIHOLEWEBPASSWORD
  #     - FTLCONF_LOCAL_IPV4=192.168.1.100
  #     # - PIHOLE_DNS_=1.1.1.2;1.0.0.2
  #     - PIHOLE_DNS_=127.0.0.1#5353
  #     - IPv6=false
  #   # Recommended but not required (DHCP needs NET_ADMIN)
  #   #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
  #   # cap_add:
  #   #   - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
  #   # networks:
  #   #   private_network:
  #   #     ipv4_address: 10.2.0.100


  # wireguard:
  #   depends_on: [unbound,stubby, pihole]
  #   image: linuxserver/wireguard
  #   container_name: wireguard
  #   restart: unless-stopped
  #   cap_add:
  #     - NET_ADMIN
  #     - SYS_MODULE
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Paris
  #     - SERVERPORT=51820
  #     #- SERVERURL=my.ddns.net #optional - For use with DDNS (Uncomment to use)
  #     - PEERS=10 # How many peers to generate for you (clients)
  #     - PEERDNS=10.2.0.100 # Set it to point to pihole
  #     - INTERNAL_SUBNET=10.6.0.0
  #   volumes:
  #     - ~/docker/wireguard:/config
  #     - /lib/modules:/lib/modules
  #   ports:
  #     - 51820:51820/udp
  #   dns:
  #     - 10.2.0.100 # Points to pihole
  #     - 10.2.0.200 # Points to unbound
  #   sysctls:
  #     - net.ipv4.conf.all.src_valid_mark=1
  #   networks:
  #     private_network:
  #       ipv4_address: 10.2.0.3


  deconz:
    image: deconzcommunity/deconz
    container_name: deconz
    restart: always
    ports:
      - 8080:8080
      - 443:443
# Uncomment si besoin VNC ZigbeeMesh
#      - 5900:5900
    privileged: true
    volumes:
#      - ~/docker/deconz:/root/.local/share/dresden-elektronik/deCONZ
      - ~/docker.ram/deconz:/opt/deCONZ
      - /etc/localtime:/etc/localtime:ro
    devices:
      - /dev/ttyACM0
    environment:
      - TZ=Europe/Paris
# Set DECONZ_VNC_MODE=1 si besoin VNC ZigbeeMesh
      - DECONZ_VNC_MODE=0
      - DECONZ_VNC_PASSWORD=nopassword
      - DECONZ_WEB_PORT=8080
#      - DECONZ_WS_PORT=443
      - DECONZ_DEVICE=/dev/ttyACM0
      - UDEV=1
      - DECONZ_START_VERBOSE=0
      - DEBUG_INFO=0
      - DECONZ_NOVNC_PORT=0

  nodered:
    image: nodered/node-red
    container_name: nodered
    restart: always
    ports:
      - "80:1880"
# dans le cas de PiHole qui a besoin du port 80 alors utilisation du port 81
      # - "81:1880"
# 8888 UDP pour temperature ESP
      - "8888:8888/udp"
      - "8887:8887/tcp"
    volumes:
      - ~/docker/nodered:/data
    environment:
      - TZ=Europe/Paris
    #  - NODE_RED_ENABLE_SAFE_MODE=true


#  pihole:
#    restart: always
#    network_mode: host

#  mosquitto:
#    image: eclipse-mosquitto
#    container_name: mosquitto
#    restart: always
#    ports:
#      - "1883:1883"
#      - "9001:9001"
#    volumes:
##      - ~/mosquitto.conf:/mosquitto/config/mosquitto.conf
##      - ~/docker/mosquitto/:/mosquitto/:rw
#      - ~/docker/mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf


#  openvpn:
#    image: registry.gitlab.com/ix.ai/openvpn
#    container_name: openvpn
#    restart: always
#    ports:
#      - "1194:1194/udp"
#    volumes:
#      - ~/docker/ovpn:/etc/openvpn
#    cap_add:
#      - NET_ADMIN
